version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: stripemeter-postgres
    environment:
      POSTGRES_USER: stripemeter
      POSTGRES_PASSWORD: stripemeter_dev
      POSTGRES_DB: stripemeter
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infra/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U stripemeter"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: stripemeter-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:latest
    container_name: stripemeter-minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin}
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/ready"]
      interval: 10s
      timeout: 5s
      retries: 5
    profiles:
      - minio

  createbuckets:
    image: minio/mc:latest
    container_name: stripemeter-minio-mc
    depends_on:
      - minio
    entrypoint: |
      /bin/sh -c "
      mc alias set local http://minio:9000 ${MINIO_ROOT_USER:-minioadmin} ${MINIO_ROOT_PASSWORD:-minioadmin} && \
      mc mb -p local/stripemeter-backfill || true && \
      mc policy set public local/stripemeter-backfill || true && \
      echo 'Buckets ready' && sleep 1 
      "
    profiles:
      - minio

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: stripemeter-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@stripemeter.local
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    profiles:
      - debug

volumes:
  postgres_data:
  redis_data:
  minio_data:
